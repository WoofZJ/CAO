@using CAO.Shared.Dtos;
@inject MessageService messageService;

@if (loading)
{
    <Loading Message="加载留言中..." />
}
else if (messages == null)
{
    <Alert Type="error" Message="服务器暂不可用，过会再来看看吧 ;-;" />
}
else if (!messages.Any())
{
    <Alert Type="info" Message="暂时还没有留言！>-<" />
}
else
{
    <Collection
        icon="message-circle-heart"
        name="留言板"
        totalCount="@messages.Count"
        pageSize="10"
        unit="条"
        elementFactory="@messageFactory"
        class="px-2"
    />
}

@code {
    bool loading;
    List<MessageGetResponse>? messages;

    protected override async Task OnInitializedAsync()
    {
        loading = true;
        messages = (await messageService.GetAllMessagesAsync())?
            .OrderByDescending(m => m.CreatedAt).ToList();
        loading = false;
    }

    Func<int, int, int, RenderFragment> messageFactory =>
    (index, pageSize, totalCount) =>
    @<div class="chat mt-2 chat-start">
        <div class="chat-image avatar">
            <div class="w-16 rounded-full border-neutral-300 border-2">
                <img src="@($"/images/avatars/{messages![index-1].AvatarId}.png")" />
            </div>
        </div>
        <div class="chat-header">
            <span class="text-base font-semibold">
                @(string.IsNullOrEmpty(messages[index-1].Nickname) ? "匿名访客" : messages[index-1].Nickname)
            </span>
        </div>
        <div class="chat-bubble break-all">
            @messages[index-1].Content
        </div>
        <div class="chat-footer opacity-50">
            <div class="text-xs">
                留言于
                @messages[index-1].CreatedAt.AddHours(8).ToString("yyyy/MM/dd HH:mm:ss")
            </div>
        </div>
    </div>;
}